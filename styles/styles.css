:root {
  --max-width: 80%;
  --padding-container: 20px;
  --header-height: 110px;
}

@media screen and (max-width: 768px) {
  body {
    --max-width: 100%
  }

* {
  box-sizing: border-box;
}

img {
  width: 100%;
  object-fit: cover;
}

html,
body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  color: var(--text, #000);
  font-family: var(--p-font-family, roboto);
  font-size: var(--p-font-size, 16px);
  font-weight: var(--p-font-weight, normal);
  font-style: var(--p-font-style, normal);
  line-height: var(--p-line-height, 1.2em);
}

body {
  display: none;
  background: var(--background, #fff);
  padding: 0;
  margin: 0;
  width: 100%;
}

main {
  background: var(--background, #fff);
  padding: 0;
  margin: 0;
  width: 100%;
  position: relative;
  min-height: 100%;
}

body.no-scroll {
  block-size: 100vh;
  overflow: hidden;
  position: relative;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
}

html,
body,
div,
span,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
button,
img,
small,
strong,
sub,
sup,
tt,
b,
u,
i,
dl,
dt,
dd,
ol,
ul,
li,
label,
legend,
caption {
  font-size: 100%;
  vertical-align: baseline;
}

h1,
h2,
h3,
h4 {
  color: var(--title, #000);
}

header {
  min-height: var(--header-height, 64px);
  display: grid;
  background: var(--header-background, #fff);
}

head:has(meta[name='header'][content='false' i]) + body > header,
head:has(meta[name='footer'][content='false' i]) + body > footer {
  display: none;
}

 /* Use :where() to give lower specificity in order to not overwrite any display option set on the web component tag */
:where([raqnWebComponent]) {
  display: block;
}

main > div > *:not(.full-width) {
  margin-inline: max(calc((100% - var(--max-width)) / 2 - var(--padding-container)), var(--padding-container));
  padding-inline: var(--padding-container);
}

.full-width {
  padding-inline: max(calc((100% - var(--max-width)) / 2), var(--padding-container));
}

main > div > div {
  background: var(--background, #fff);
  color: var(--text, #000);
  padding: var(--padding, 0);
}

main > div > div > div {
  max-width: var(--max-width, 100%);
  margin: var(--margin, 0 auto);
  width: 100%;
}

.breadcrumbs {
  display: grid;
  grid-template-columns: var(--grid-template-columns, 1fr);
  gap: var(--gap, 20px);
  align-items: center;
  justify-items: start;
  min-height: var(--font-size, 1.2em);
}

a {
  line-height: 1em;
  align-items: center;
  color: var(--highlight, inherit);
  text-decoration: none;
  font-size: var(--font-size, 1em);
}

a:hover {
  color: var(--text, inherit);
}

button {
  border: none;
  appearance: none;
  background-color: transparent;
  display: inline-flex;
  line-height: 1em;
  align-items: center;
  text-decoration: none;
}

button:hover {
  color: var(--scope-link-color-hover, inherit);
}

.raqn-grid {
  width: var(--max-width, 100%);
  margin: 0 auto;
  display: grid;
  grid-template-columns: var(--grid-template-columns, 1fr);
  align-items: center;
  justify-items: start;
}

picture,
img {
  display: block;
  max-width: 100%;
  height: auto;
}

[isloading],
.hide-with-error,
.hide {
  display: none;
  pointer-events: none;
}

#franklin-svg-sprite {
  display: none;
}
